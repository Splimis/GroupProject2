<h1>Rick and Morty</h1>

<main>
  <div class="container">
    <div class="row">
      <div class="col m4">
      <form action="/" Method="GET">
      <ul>
 	      {{#each quote}}
  		    <li>
         	<p>{{this.quotation}}</p>
  		    </li>
  		  {{/each}}
      </ul>
      
      <button type="button" class="btn btn-primary newquote" name="" id="button">
      <p>Random Quote</p>
      </button>
      </form>
    </div>

    <div class="col m4">
      <ul>
      <form action="/" Method="GET">
        {{#each quote}}
          <li>
          <p>{{this.quotation}}</p>
          </li>
        {{/each}}
      </ul> 
      <button type="button" class="btn btn-primary newquote" name="" id="button">
      <p>Rick Quote</p>
      </button>
      </form>
    </div>

    <div class="col m4">
    <form action="/" Method="GET">
      <ul>
        {{#each quote}}
          <li>
          <p>{{this.quotation}}</p>
          </li>
        {{/each}}
      </ul>
      <button type="button" class="btn btn-primary newquote" name="" id="button">
      <p>Morty Quote</p>
      </button>
      </form>
    </div>

    <h2>Add a Quote</h2>

<div class="row">
  <div class="col s12">
    <form action="/" method="POST">
      <input type="text" id="name" name="quotation" placeholder="Do it.">
      <button type="submit" class="addQuoteButton">Add Quotations</button>
    </form>
  </div>
</div>


<div id="player"></div>

    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
          height: '390',
          width: '640',
          videoId: 'M7lc1UVf-VE',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

       // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
        event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      var done = false;
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          setTimeout(stopVideo, 6000);
          done = true;
        }
      }
      function stopVideo() {
        player.stopVideo();
      }

//       $('#button').on('click', function(event) {
//        event.preventDefault(); // To prevent following the link (optional)

// });
    </script>
</main>